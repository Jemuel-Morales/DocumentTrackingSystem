// <auto-generated />
using System;
using DocumentTrackingSystem.Web.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocumentTrackingSystem.Web.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240418184416_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.Document.EDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TypeId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 4, 19, 2, 44, 13, 816, DateTimeKind.Local).AddTicks(638),
                            DateUpdated = new DateTime(2024, 4, 19, 2, 44, 13, 816, DateTimeKind.Local).AddTicks(639),
                            Description = "Requesting for grades",
                            DocumentNumber = "2024-0419-0244-8160",
                            StudentId = 1,
                            Subject = "Summary of Grades",
                            TrackingNumber = "2404190244138160",
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.Document.EStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Under Review"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Pending Approval"
                        },
                        new
                        {
                            Id = 3,
                            StatusName = "Approved"
                        },
                        new
                        {
                            Id = 4,
                            StatusName = "Rejected"
                        },
                        new
                        {
                            Id = 5,
                            StatusName = "On Hold"
                        },
                        new
                        {
                            Id = 6,
                            StatusName = "In Progress"
                        },
                        new
                        {
                            Id = 7,
                            StatusName = "Completed"
                        });
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.Document.EType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Letter"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Form"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Report"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Compliance"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "Support"
                        });
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.EStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Course = "BSCS",
                            DateOfBirth = new DateTime(1999, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            Gender = "Male",
                            LastName = "Doe",
                            MiddleName = "Smith",
                            Semester = 2,
                            StudentNumber = "OCC202012020001",
                            YearLevel = 2
                        },
                        new
                        {
                            Id = 2,
                            Course = "BSIT",
                            DateOfBirth = new DateTime(1999, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            Gender = "Female",
                            LastName = "Mantis",
                            MiddleName = "Yor",
                            Semester = 2,
                            StudentNumber = "OCC202012020002",
                            YearLevel = 2
                        },
                        new
                        {
                            Id = 3,
                            Course = "BSIT",
                            DateOfBirth = new DateTime(2000, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kate",
                            Gender = "Female",
                            LastName = "Bernal",
                            MiddleName = "Bernal",
                            Semester = 2,
                            StudentNumber = "OCC202012020003",
                            YearLevel = 4
                        });
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.TrackingStatus.ETrackingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("StatusId");

                    b.ToTable("TrackingStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comments = "this is autogenerated",
                            CreatedBy = "computer",
                            DateCreated = new DateTime(2024, 4, 19, 2, 44, 13, 816, DateTimeKind.Local).AddTicks(724),
                            DocumentId = 1,
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.User.EPeople", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1993, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Abraham",
                            Gender = "Male",
                            LastName = "De Leon",
                            MiddleName = "Tapel",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1993, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jessica",
                            Gender = "Female",
                            LastName = "Atkinson",
                            MiddleName = "Cy",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1993, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Celine",
                            Gender = "Female",
                            LastName = "Vargas",
                            MiddleName = "Bernal",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.User.ERole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Registrar"
                        });
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.User.EUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Abraham24@occ-registrar.edu.ph",
                            Password = "Abraham24",
                            RoleId = 2,
                            Username = "Abraham24"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Atkinson6@occ-registrar.edu.ph",
                            Password = "Atkinson6",
                            RoleId = 2,
                            Username = "Atkinson6"
                        },
                        new
                        {
                            Id = 3,
                            Email = "CelineV10@occ-registrar.edu.ph",
                            Password = "CelineV10",
                            RoleId = 2,
                            Username = "CelineV10"
                        });
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.Document.EDocument", b =>
                {
                    b.HasOne("DocumentTrackingSystem.Web.Entities.EStudent", "Student")
                        .WithMany("Documents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentTrackingSystem.Web.Entities.Document.EType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.TrackingStatus.ETrackingStatus", b =>
                {
                    b.HasOne("DocumentTrackingSystem.Web.Entities.Document.EDocument", "Document")
                        .WithMany("TrackingStatus")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentTrackingSystem.Web.Entities.Document.EStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.User.EPeople", b =>
                {
                    b.HasOne("DocumentTrackingSystem.Web.Entities.User.EUser", "User")
                        .WithOne("People")
                        .HasForeignKey("DocumentTrackingSystem.Web.Entities.User.EPeople", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.User.EUser", b =>
                {
                    b.HasOne("DocumentTrackingSystem.Web.Entities.User.ERole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.Document.EDocument", b =>
                {
                    b.Navigation("TrackingStatus");
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.EStudent", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DocumentTrackingSystem.Web.Entities.User.EUser", b =>
                {
                    b.Navigation("People")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
